cf01 -- C-Flat Library Version 01


LICENSE

Copyright (c) 2023 Mac Stevens <stevensm@earthlink.net> <www.macstevens.net>

Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

Reference: https://opensource.org/licenses/ISC



DESCRIPTION

C-Flat is a project encompassing various programming tools, most of
which remain undeveloped as of March 2023.  cf00 is the version of 
C-flat implemented in C.  It is barely started.  For more information,
see commit e42fae1756c3e54786300e86e4895809bc39e62c.

cf01 is the version implemented in C++.  In 2021, the first tool of
practical use was implemented: Auto-Assert.



AUTO ASSERT

Auto-Assert attempts to automate much of the following debugging cycle.
 1. Bug is detected.  Program crashes or produces wrong output, etc.
 2. Add debug code & assertions.
 3. Re-run.
 4. Add debug code & assertions.
 5. Re-run
 ...
 6. Bug is found.
 7. Bug is fixed.
 8. Add code to check bug is fixed.
 9. Re-run.
 10. Remove  debug code & assertions.
 11. Re-run.

Auto-Assert works as follows.  The programmer places assertions and
extra debug code using cf01 functions and/or macros.  These functions
and macros include hints indicating when such assertions and debug
code should be executed.  Some assertions are cheap and could be run
always, some are expensive and hence should be run rarely. The cf01 module
does the bookkeeping, keeping track of which assertions are run and
pass/fail status.  

When an assertion fails, cf01 stores some assertion information in a file
named cf01_jrnl.txt. When the program is re-started, cf01 reads this
file and enables more assertions and debug code, targeted to occur just prior to
the failing assertion.  Then the program is re-run, possibly triggering an
earlier assertion.  This process continues until the bug is found.

Ideally, the programmer's task becomes adding or modifying assertions and
debug code.  And cf01 handles the enabling and disabling of this 
additional code, which normally happens by simply re-running the application
without re-building.


Run 1
+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+
|                   |                   |                   |
Assert:PASS         Assert:PASS         Assert:FAIL         Assert


Run 2
+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+
|                   |    |    |    |    |                   |
Assert:PASS         |    |    |    |    Assert:FAIL         Assert
                    |    |    |    Assert:FAIL            
                    |    |    Assert:PASS
                    |    Assert:PASS
                    Assert:PASS


Run 3
                         Look for bug here  
                                \/
+----+----+----+----+----+----++++++----+----+----+----+----+----+----+----+----+
|                   |    |    ||||||    |                   |
Assert:PASS         |    |    ||||||    Assert:FAIL         Assert
                    |    |    |||||Assert:FAIL
                    |    |    ||||Assert:FAIL
                    |    |    |||Assert:FAIL
                    |    |    ||Assert:PASS
                    |    |    |Assert:PASS
                    |    |    Assert:PASS
                    |    Assert:PASS
                    Assert:PASS



BUILD TOOLS

  IDE: SlickEdit Version 11.0.0 Copyright 1988-2006 SlickEdit Inc.
       Technical Support Phone: 1 919.473.0070
       Technical Support Email: support@slickedit.com

  Cygwin v 3.1.7
       CYGWIN_NT-10.0 Lenovo-PC 3.1.7(0.340/5/3) 2020-08-22 17:48 x86_64 Cygwin
       https://www.cygwin.com/install.html

  Compiler:
       gcc (GCC) 10.2.0


  
BUILD

1. Start Cygwin
2. >cd cf01/slickedit_gcc
3. >make --makefile=cf01.mak CFG=Debug
4. >make --makefile=cf01_test.mak CFG=Debug
(configurations = Debug, Release, or Profile)


TEST

1. Start Cygwin
2. >cd cf01/slickedit_gcc/Debug
3. >./cf01_test.exe
4. >./cf01_test.exe
5. >./cf01_test.exe
6. Open cf01_jrnl.txt in text editor


WINDOWS DEPLOYMENT

In same directory as cf01_test.exe, place the following files:
  cyggcc_s-seh-1.dll
  cygstdc++-6.dll
  cygwin1.dll

These can be found in [CYGWIN INSTALLATION DIRECTORY]\cygwin\cygwin64\bin



